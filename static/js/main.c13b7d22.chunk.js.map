{"version":3,"sources":["assets/img/seinfeld_cover.jpg","assets/img sync /^/.//.*/.jpg$","assets/img/elaine/elaine-1.jpg","assets/img/elaine/elaine-2.jpg","assets/img/elaine/elaine-3.jpg","assets/img/elaine/elaine-4.jpg","assets/img/elaine/elaine-5.jpg","assets/img/generic/generic-1.jpg","assets/img/generic/generic-2.jpg","assets/img/generic/generic-3.jpg","assets/img/generic/generic-4.jpg","assets/img/generic/generic-5.jpg","assets/img/george/george-1.jpg","assets/img/george/george-2.jpg","assets/img/george/george-3.jpg","assets/img/george/george-4.jpg","assets/img/george/george-5.jpg","assets/img/jerry/jerry-1.jpg","assets/img/jerry/jerry-2.jpg","assets/img/jerry/jerry-3.jpg","assets/img/jerry/jerry-4.jpg","assets/img/jerry/jerry-5.jpg","assets/img/kramer/kramer-1.jpg","assets/img/kramer/kramer-2.jpg","assets/img/kramer/kramer-3.jpg","assets/img/kramer/kramer-4.jpg","assets/img/kramer/kramer-5.jpg","components/Spinner/spinner.gif","reducers/quoteReducer.js","reducers/episodeReducer.js","reducers/index.js","actions/types.js","Root.js","actions/index.js","components/Header/Header.js","components/Quote/QuoteGenerator.js","components/Quote/Synopsis.js","components/Quote/QuoteDetail.js","components/Quote/Quote.js","components/Spinner/Spinner.js","components/Footer/Footer.js","App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","initialState","quotes","character","randomQuote","episodes","selectedEpisode","combineReducers","state","action","type","payload","season","episode","filter","ep","number","store","createStore","reducers","composeWithDevTools","applyMiddleware","thunk","Root","children","selectEpisode","parseInt","types","Header","className","src","headerImage","alt","QuoteGenerator","props","handleChange","selectCharacter","target","value","setState","selectedCharacter","handleClick","quote","Math","floor","random","length","filteredQuotes","author","toLowerCase","getRandomQuote","this","name","onChange","label","onClick","Component","connect","dispatch","Synopsis","striptags","summary","QuoteDetail","renderImage","index","ceil","imageCharacter","renderCharacterSwitch","imageSrc","require","renderedQuote","Quote","Spinner","Footer","Date","getFullYear","href","App","fetchQuotes","fetchEpisodes","a","axios","get","response","data","console","log","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c13b7d22.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/seinfeld_cover.897bcfb3.jpg\";","var map = {\n\t\"./elaine/elaine-1.jpg\": 64,\n\t\"./elaine/elaine-2.jpg\": 65,\n\t\"./elaine/elaine-3.jpg\": 66,\n\t\"./elaine/elaine-4.jpg\": 67,\n\t\"./elaine/elaine-5.jpg\": 68,\n\t\"./generic/generic-1.jpg\": 69,\n\t\"./generic/generic-2.jpg\": 70,\n\t\"./generic/generic-3.jpg\": 71,\n\t\"./generic/generic-4.jpg\": 72,\n\t\"./generic/generic-5.jpg\": 73,\n\t\"./george/george-1.jpg\": 74,\n\t\"./george/george-2.jpg\": 75,\n\t\"./george/george-3.jpg\": 76,\n\t\"./george/george-4.jpg\": 77,\n\t\"./george/george-5.jpg\": 78,\n\t\"./jerry/jerry-1.jpg\": 79,\n\t\"./jerry/jerry-2.jpg\": 80,\n\t\"./jerry/jerry-3.jpg\": 81,\n\t\"./jerry/jerry-4.jpg\": 82,\n\t\"./jerry/jerry-5.jpg\": 83,\n\t\"./kramer/kramer-1.jpg\": 84,\n\t\"./kramer/kramer-2.jpg\": 85,\n\t\"./kramer/kramer-3.jpg\": 86,\n\t\"./kramer/kramer-4.jpg\": 87,\n\t\"./kramer/kramer-5.jpg\": 88,\n\t\"./seinfeld_cover.jpg\": 16\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 63;","module.exports = __webpack_public_path__ + \"static/media/elaine-1.a0c5de38.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elaine-2.73c9b493.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elaine-3.7fb3b196.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elaine-4.c45d023c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/elaine-5.aa411f36.jpg\";","module.exports = __webpack_public_path__ + \"static/media/generic-1.6ab50220.jpg\";","module.exports = __webpack_public_path__ + \"static/media/generic-2.52645ea7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/generic-3.e0e0bb13.jpg\";","module.exports = __webpack_public_path__ + \"static/media/generic-4.84c966f3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/generic-5.68689b0f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-1.e887d044.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-2.01c209d0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-3.b8df9df3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-4.5ac46e85.jpg\";","module.exports = __webpack_public_path__ + \"static/media/george-5.e3938fed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry-1.a657ec87.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry-2.4924d993.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry-3.b9afd82f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry-4.34e647c7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jerry-5.9360c69c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kramer-1.360c0345.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kramer-2.62709b3d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kramer-3.5ff57d05.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kramer-4.6292178e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/kramer-5.d472bdc7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.7ba725da.gif\";","import {\n  FETCH_QUOTES,\n  SELECT_CHARACTER,\n  GET_RANDOM_QUOTE\n} from \"../actions/types\";\n\nconst initialState = {\n  quotes: [],\n  character: \"\",\n  randomQuote: \"\"\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_QUOTES:\n      return {\n        ...state,\n        quotes: action.payload\n      };\n    case SELECT_CHARACTER:\n      return {\n        ...state,\n        character: action.payload\n      };\n    case GET_RANDOM_QUOTE:\n      return {\n        ...state,\n        randomQuote: action.payload\n      };\n    default:\n      return state;\n  }\n}\n","import { FETCH_EPISODES, SELECT_EPISODE } from \"../actions/types\";\n\nconst initialState = {\n  episodes: [],\n  selectedEpisode: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_EPISODES:\n      return {\n        ...state,\n        episodes: action.payload\n      };\n    case SELECT_EPISODE:\n      const { season, episode } = action.payload;\n      const selectedEpisode = state.episodes.filter(ep => {\n        return ep.season === season && ep.number === episode;\n      });\n      return {\n        ...state,\n        selectedEpisode: selectedEpisode\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport quoteReducer from \"./quoteReducer\";\nimport episodeReducer from \"./episodeReducer\";\n\nexport default combineReducers({\n  quotes: quoteReducer,\n  episodes: episodeReducer\n});\n","export const FETCH_QUOTES = \"FETCH_QUOTES\";\nexport const SELECT_CHARACTER = \"SELECT_CHARACTER\";\nexport const GET_RANDOM_QUOTE = \"GET_RANDOM_QUOTE\";\nexport const FETCH_EPISODES = \"FETCH_EPISODES\";\nexport const SELECT_EPISODE = \"SELECT_EPISODE\";\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers\";\n\nconst initialState = {};\n\nconst store = createStore(\n  reducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nconst Root = ({ children, initialState = {} }) => {\n  return <Provider store={store}>{children}</Provider>;\n};\n\nexport default Root;\n","import {\n  FETCH_QUOTES,\n  SELECT_CHARACTER,\n  GET_RANDOM_QUOTE,\n  FETCH_EPISODES,\n  SELECT_EPISODE\n} from \"./types\";\nimport axios from \"axios\";\n\nexport const fetchQuotes = () => async dispatch => {\n  const response = await axios.get(\n    \"https://seinfeld-quotes.herokuapp.com/quotes\"\n  );\n\n  dispatch({\n    type: FETCH_QUOTES,\n    payload: response.data.quotes\n  });\n};\n\nexport const fetchEpisodes = () => async dispatch => {\n  const response = await axios.get(\n    \"http://api.tvmaze.com/shows/530/episodes\"\n  );\n\n  console.log(response);\n\n\n  dispatch({\n    type: FETCH_EPISODES,\n    payload: response.data\n  });\n};\n\nexport const selectCharacter = character => {\n  return {\n    type: SELECT_CHARACTER,\n    payload: character\n  };\n};\n\nexport const getRandomQuote = quote => dispatch => {\n  dispatch({\n    type: GET_RANDOM_QUOTE,\n    payload: quote\n  });\n\n  dispatch(selectEpisode(quote));\n};\n\nexport const selectEpisode = randomQuote => {\n  const { season, episode } = randomQuote;\n\n  return {\n    type: SELECT_EPISODE,\n    payload: {\n      season: parseInt(season),\n      episode: parseInt(episode),\n      types: {\n        season: typeof season,\n        episode: typeof episode\n      }\n    }\n  };\n};\n","import React from \"react\";\nimport headerImage from \"../../assets/img/seinfeld_cover.jpg\";\n\nconst Header = () => {\n  return (\n    <div className=\"Header\">\n      <img src={headerImage} alt=\"seinfeld characters\" className=\"img-header\" />\n      <h1>Seinfeld Quote Generator</h1>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { selectCharacter, getRandomQuote, selectEpisode } from \"../../actions\";\n\nclass QuoteGenerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedCharacter: \"\"\n    };\n  }\n  handleChange = e => {\n    this.props.selectCharacter(e.target.value);\n    this.setState({\n      selectedCharacter: e.target.value\n    });\n  };\n\n  handleClick = e => {\n    const { quotes, character, episodes } = this.props;\n\n    let quote;\n\n    if (character === \"\") {\n      const index = Math.floor(Math.random() * quotes.length);\n      quote = quotes[index];\n    } else {\n      const filteredQuotes = quotes.filter(quote => {\n        return quote.author.toLowerCase() === character;\n      });\n      const index = Math.floor(Math.random() * filteredQuotes.length);\n      quote = filteredQuotes[index];\n    }\n\n    this.props.getRandomQuote(quote);\n  };\n\n  render() {\n    const { selectedCharacter } = this.state;\n    return (\n      <div className=\"Quote-Generator\">\n        <select\n          name=\"\"\n          id=\"quote-select\"\n          onChange={this.handleChange}\n          value={selectedCharacter}\n        >\n          <optgroup label=\"Who would you like a quote from?\">\n            <option value=\"all\">Anyone</option>\n            <option value=\"jerry\">Jerry</option>\n            <option value=\"george\">George</option>\n            <option value=\"elaine\">Elaine</option>\n            <option value=\"kramer\">Kramer</option>\n          </optgroup>\n        </select>\n        <button onClick={this.handleClick} id=\"quote-btn\">\n          Giddyup\n        </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    quotes: state.quotes.quotes,\n    character: state.quotes.character,\n    episodes: state.episodes.episodes\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { selectCharacter, getRandomQuote }\n)(QuoteGenerator);\n","import React from \"react\";\nimport striptags from \"striptags\";\n\nconst Synopsis = ({ episode }) => {\n  return (\n    <div className=\"Synopsis synopsis-section\">\n      <h3>Episode Synopsis</h3>\n      <p id=\"synopsis\">{striptags(episode.summary)}</p>\n    </div>\n  );\n};\n\nexport default Synopsis;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Synopsis from \"./Synopsis\";\n\nclass QuoteDetail extends Component {\n  renderCharacterSwitch(character) {\n    switch (character) {\n      case \"Jerry\":\n        return \"jerry\";\n      case \"George\":\n        return \"george\";\n      case \"Kramer\":\n        return \"kramer\";\n      case \"Elaine\":\n        return \"elaine\";\n      default:\n        return \"generic\";\n    }\n  }\n\n  renderImage = (character = null) => {\n    let index = Math.ceil(Math.random() * 5);\n\n    let imageCharacter = this.renderCharacterSwitch(character);\n\n    let imageSrc = require(`../../assets/img/${imageCharacter}/${imageCharacter}-${index}.jpg`);\n\n    return imageSrc;\n  };\n\n  render() {\n    const { quote, author, season, episode } = this.props.quote;\n    const { selectedEpisode } = this.props;\n\n    const character = author ? author : \"\";\n\n    const renderedQuote = quote ? (\n      <div className=\"quote\">\n        <img src={this.renderImage(character)} alt=\"\" className=\"img-quote\" />\n        <div className=\"quote-text\">\n          <p>{quote}</p>\n          <p id=\"quote-details\">\n            {author}: Season {season}, Episode {episode}\n          </p>\n          <p id=\"episode-name\">\n            <em>\"{selectedEpisode ? selectedEpisode[0].name : \"\"}\"</em>\n          </p>\n        </div>\n      </div>\n    ) : (\n      <div id=\"instructions\">\n        <p>Click the button to view random quotes from Seinfeld.</p>\n        <p>\n          To see quotes by your favourite character, select from the drop down\n          list\n        </p>\n        <br />\n        <p>Thanks for stopping by. Hope you enjoy the site! :-)</p>\n      </div>\n    );\n\n    return (\n      <div className=\"Quote-Detail\">\n        <div className=\"quote-text\">{renderedQuote}</div>\n        {this.props.selectedEpisode.length ? (\n          <Synopsis episode={this.props.selectedEpisode[0]} />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    quote: state.quotes.randomQuote,\n    selectedEpisode: state.episodes.selectedEpisode\n  };\n};\n\nexport default connect(mapStateToProps)(QuoteDetail);\n","import React from \"react\";\n\nimport QuoteGenerator from \"./QuoteGenerator\";\nimport QuoteDetail from \"./QuoteDetail\";\n\nconst Quote = () => {\n  return (\n    <div className=\"quote-section\">\n      <QuoteGenerator />\n      <QuoteDetail />\n    </div>\n  );\n};\n\nexport default Quote;\n","import React from \"react\";\n\nconst Spinner = () => {\n  return (\n    <div className=\"Spinner\">\n      <img src={require(\"./spinner.gif\")} alt=\"loading spinner\" />\n      <p>Loading...</p>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <p>\n        {\"\\u00A9\"} {new Date().getFullYear()}{\" \"}\n        <a href=\"https://donatron.github.io/portfolio/\" target=\"_blank\">\n          Don Macarthur\n        </a>\n      </p>\n      <p>\n        Built using the{\" \"}\n        <a href=\"https://seinfeld-quotes.herokuapp.com/\" target=\"_blank\">\n          Seinfeld Quote API\n        </a>{\" \"}\n        created by William DiFruscio\n      </p>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchQuotes, fetchEpisodes } from \"./actions\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Quote from \"./components/Quote/Quote\";\nimport Spinner from \"./components/Spinner/Spinner\";\nimport Footer from \"./components/Footer/Footer\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchQuotes();\n    this.props.fetchEpisodes();\n  }\n  render() {\n    const { quotes } = this.props;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <Header />\n          {quotes.length ? <Quote /> : <Spinner />}\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    quotes: state.quotes.quotes\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchQuotes, fetchEpisodes }\n)(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Root\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}